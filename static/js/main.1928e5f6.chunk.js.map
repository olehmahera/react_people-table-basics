{"version":3,"sources":["components/MainNavigation/NavigationLink/NavigationLink.tsx","components/MainNavigation/MainNavigation.tsx","App.tsx","components/Pages/HomePage/HomePage.tsx","components/Pages/NotFound/NotFound.tsx","components/Loader/Loader.tsx","api.ts","types/PeopleTableHeader/PeolpeTableHeader.ts","components/PeopleTable/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Pages/PeopleTablePage/PeopleTablePage.tsx","helpers.tsx","components/AppRouting.tsx","index.tsx"],"names":["NavigationLink","_ref","title","to","_jsx","NavLink","className","_ref2","isActive","cn","children","MainNavigation","role","_jsxs","App","Outlet","HomePage","NotFound","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePersonHeader","PersonLink","person","sex","slug","name","concat","PeopleTable","people","_useParams$personSlug","useParams","personSlug","Object","entries","map","_ref3","_slicedToArray","key","value","born","died","mother","motherName","father","fatherName","isPersonSelected","PeopleTablePage","_useState","useState","_useState2","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","useEffect","fetchPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","t0","t1","sent","t2","finish","stop","apply","arguments","preparedPeople","peopleMap","Map","forEach","set","get","_objectSpread","preparePeople","isErrorVisible","isNoPeopleOnServer","length","isPeopleTableFetched","_Fragment","router","createBrowserRouter","path","element","errorElement","AppRouting","RouterProvider","createRoot","document","getElementById","render"],"mappings":"yPASaA,EAA4B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAE,OACnDC,cAACC,IAAO,CACNF,GAAIA,EACJG,UAAW,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAQ,OAAQC,IAAG,cAC/B,CAAE,8BAA+BD,GAAW,EAAEE,SAE/CR,GACO,ECdCS,EAAiB,WAAH,OACzBP,cAAA,OACE,UAAQ,MACRE,UAAU,iCACVM,KAAK,aACL,aAAW,kBAAiBF,SAE5BN,cAAA,OAAKE,UAAU,YAAWI,SACxBG,eAAA,OAAKP,UAAU,eAAcI,SAAA,CAC3BN,cAACJ,EAAc,CACbE,MAAM,OACNC,GAAG,MAGLC,cAACJ,EAAc,CACbE,MAAM,SACNC,GAAG,kBAIL,EClBKW,EAAM,WAAH,OACdD,eAAA,OAAK,UAAQ,MAAKH,SAAA,CAChBN,cAACO,EAAc,IAEfP,cAAA,QAAME,UAAU,UAASI,SACvBN,cAAA,OAAKE,UAAU,YAAWI,SACxBN,cAACW,IAAM,UAGP,ECXKC,EAAe,WAAH,OACvBZ,cAAA,MAAIE,UAAU,QAAOI,SAAC,aAAc,ECDzBO,EAAe,WAAH,OACvBb,cAAA,MAAIE,UAAU,QAAOI,SAAC,kBAAmB,E,4BCD9BQ,G,MAAS,WAAH,OACjBd,cAAA,OAAKE,UAAU,SAAS,UAAQ,SAAQI,SACtCN,cAAA,OAAKE,UAAU,qBACX,GCID,SAASa,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAM,KAMrDI,MAAK,kBAAMC,MATA,oEASc,IACzBD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAM,IARrC,IAAcP,CASd,CCdO,IAAKQ,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAkB,YAAlBA,EAAkB,UAAlBA,EAAkB,YAAlBA,EAAkB,YAAlBA,EAAkB,gBAAlBA,EAAkB,gBAAlBA,CAAkB,MCSjBC,EAAwB,SAAH5B,GAAoB,IAAd6B,EAAM7B,EAAN6B,OAC9BC,EAAoBD,EAApBC,IAAKC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KAEnB,OAEE7B,cAACC,IAAO,CACNF,GAAE,WAAA+B,OAAaF,GACf1B,UAAWG,IAAG,CAAE,kBAA2B,MAARsB,IAAerB,SAEjDuB,GAGP,ECVaE,EAAyB,SAAHlC,GAAoB,IAAdmC,EAAMnC,EAANmC,OACAC,EAAXC,cAApBC,kBAAU,IAAAF,EAAG,GAAEA,EAEvB,OACExB,eAAA,SACE,UAAQ,cACRP,UAAU,uDAAsDI,SAAA,CAEhEN,cAAA,SAAAM,SACEN,cAAA,MAAAM,SACG8B,OAAOC,QAAQb,GAAoBc,KAAI,SAAAnC,GAAA,IAAAoC,EAAAC,YAAArC,EAAA,GAAEsC,EAAGF,EAAA,GAAEG,EAAKH,EAAA,UAClDvC,cAAA,MAAAM,SAAeoC,GAAND,EAAiB,QAKhCzC,cAAA,SAAAM,SACG0B,EAAOM,KAAI,SAAAZ,GACV,IACEE,EAQEF,EARFE,KACAD,EAOED,EAPFC,IACAgB,EAMEjB,EANFiB,KACAC,EAKElB,EALFkB,KACAC,EAIEnB,EAJFmB,OACAC,EAGEpB,EAHFoB,WACAC,EAEErB,EAFFqB,OACAC,EACEtB,EADFsB,WAEIC,EAAmBd,IAAeP,EAExC,OACEnB,eAAA,MACE,UAAQ,SAERP,UAAWG,IAAG,CAAE,yBAA0B4C,IAAoB3C,SAAA,CAE9DN,cAAA,MAAAM,SACEN,cAACyB,EAAU,CAACC,OAAQA,MAGtB1B,cAAA,MAAAM,SAAKqB,IACL3B,cAAA,MAAAM,SAAKqC,IACL3C,cAAA,MAAAM,SAAKsC,IACL5C,cAAA,MAAAM,SACGuC,EACG7C,cAACyB,EAAU,CAACC,OAAQmB,IACpBC,GAAc,MAEpB9C,cAAA,MAAAM,SACGyC,EACG/C,cAACyB,EAAU,CAACC,OAAQqB,IACpBC,GAAc,QAlBfpB,EAuBX,QAIR,E,QChEasB,EAAsB,WACjC,IAAAC,EAA4BC,mBAAmB,IAAGC,EAAAb,YAAAW,EAAA,GAA3CnB,EAAMqB,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAAkCH,oBAAS,GAAKI,EAAAhB,YAAAe,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA8BP,oBAAS,GAAMQ,EAAApB,YAAAmB,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,qBAAU,WACR,IAAMC,EAAW,eAAAnE,EAAAoE,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEP,OAFOF,EAAAC,KAAA,EAAAD,EAAAG,GAEhBnB,EAASgB,EAAAE,KAAA,EAAOzD,IAAW,OAAAuD,EAAAI,GAAAJ,EAAAK,MAAA,EAAAL,EAAAG,IAAAH,EAAAI,IAAAJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE3BR,GAAW,GAAM,QAEG,OAFHQ,EAAAC,KAAA,GAEjBb,GAAa,GAAOY,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBARgB,OAAAvE,EAAAkF,MAAA,KAAAC,UAAA,KAUjBhB,GACF,GAAG,IAEH,IAAMiB,ECxBqB,SAACjD,GAC5B,IAAMkD,EAAY,IAAIC,IAiBtB,OAfAnD,EAAOoD,SAAQ,SAAA1D,GACbwD,EAAUG,IAAI3D,EAAOG,KAAMH,EAC7B,IAEuBM,EAAOM,KAAI,SAAAZ,GAChC,IAAMmB,EAASqC,EAAUI,IAAI5D,EAAOoB,YAC9BC,EAASmC,EAAUI,IAAI5D,EAAOsB,YAEpC,OAAAuC,wBAAA,GACK7D,GAAM,IACTmB,SACAE,UAEJ,GAGF,CDKyByC,CAAcxD,GAE/ByD,GAAkBhC,GAAaI,EAC/B6B,GAAsBjC,IAAcI,IAAY7B,EAAO2D,OACvDC,GAAwBnC,IAAcI,GAAW7B,EAAO2D,OAAS,EAEvE,OACElF,eAAAoF,WAAA,CAAAvF,SAAA,CACEN,cAAA,MAAIE,UAAU,QAAOI,SAAC,gBACrBmD,GAAazD,cAACc,EAAM,IAEpB2E,GACCzF,cAAA,KAAG,UAAQ,qBAAqBE,UAAU,kBAAiBI,SAAC,yBAK7DoF,GACC1F,cAAA,KAAG,UAAQ,kBAAiBM,SAAC,sCAK9BsF,GAAwB5F,cAAC+B,EAAW,CAACC,OAAQiD,MAGpD,EE7CMa,EAASC,YAAoB,CACjC,CACEC,KAAM,IACNC,QAASjG,cAACU,EAAG,IACbwF,aAAclG,cAACa,EAAQ,IACvBP,SAAU,CACR,CACE0F,KAAM,IACNC,QAASjG,cAACY,EAAQ,KAEpB,CACEoF,KAAM,UACNC,QAASjG,cAACkD,EAAe,IACzB5C,SAAU,CACR,CACE0F,KAAM,cACNC,QAASjG,cAACkD,EAAe,WAQxBiD,EAAiB,WAAH,OACzBnG,cAACoG,IAAc,CAACN,OAAQA,GAAU,E,YC1BpCO,qBAAWC,SAASC,eAAe,SAChCC,OACCxG,cAACmG,EAAU,I","file":"static/js/main.1928e5f6.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  title: string;\n  to: To;\n};\n\nexport const NavigationLink: FC<Props> = ({ title, to }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (cn('navbar-item',\n      { 'has-background-grey-lighter': isActive }))}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavigationLink } from './NavigationLink';\n\nexport const MainNavigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink\n          title=\"Home\"\n          to=\"/\"\n        />\n\n        <NavigationLink\n          title=\"People\"\n          to=\"/people\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { MainNavigation } from './components/MainNavigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNavigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const NotFound: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum PeoplePersonHeader {\n  NAME = 'Name',\n  SEX = 'Sex',\n  BORN = 'Born',\n  DIED = 'Died',\n  MOTHER = 'Mother',\n  FATHER = 'Father',\n}\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { sex, slug, name } = person;\n\n  return (\n\n    <NavLink\n      to={`/people/${slug}`}\n      className={cn({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PeoplePersonHeader } from '../../types/PeopleTableHeader';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.entries(PeoplePersonHeader).map(([key, value]) => (\n            <th key={key}>{value}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug,\n            sex,\n            born,\n            died,\n            mother,\n            motherName,\n            father,\n            fatherName,\n          } = person;\n          const isPersonSelected = personSlug === slug;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({ 'has-background-warning': isPersonSelected })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : fatherName || '-'}\n              </td>\n            </tr>\n\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../../Loader';\nimport { getPeople } from '../../../api';\nimport { Person } from '../../../types/Person';\nimport { PeopleTable } from '../../PeopleTable';\nimport { preparePeople } from '../../../helpers';\n\nexport const PeopleTablePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        setPeople(await getPeople());\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  const preparedPeople = preparePeople(people);\n\n  const isErrorVisible = !isLoading && isError;\n  const isNoPeopleOnServer = !isLoading && !isError && !people.length;\n  const isPeopleTableFetched = !isLoading && !isError && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading && <Loader />}\n\n      {isErrorVisible && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {isNoPeopleOnServer && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {isPeopleTableFetched && <PeopleTable people={preparedPeople} />}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\nexport const preparePeople = (people: Person[]) => {\n  const peopleMap = new Map();\n\n  people.forEach(person => {\n    peopleMap.set(person.name, person);\n  });\n\n  const preparedPeople = people.map(person => {\n    const mother = peopleMap.get(person.motherName);\n    const father = peopleMap.get(person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  return preparedPeople;\n};\n","import { FC } from 'react';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport { App } from '../App';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFound } from './Pages/NotFound/NotFound';\nimport { PeopleTablePage } from './Pages/PeopleTablePage';\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFound />,\n    children: [\n      {\n        path: '/',\n        element: <HomePage />,\n      },\n      {\n        path: '/people',\n        element: <PeopleTablePage />,\n        children: [\n          {\n            path: ':personSlug',\n            element: <PeopleTablePage />,\n          },\n        ],\n      },\n    ],\n  },\n]);\n\nexport const AppRouting: FC = () => (\n  <RouterProvider router={router} />\n);\n","import { createRoot } from 'react-dom/client';\nimport { AppRouting } from './components/AppRouting';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <AppRouting />,\n  );\n"],"sourceRoot":""}